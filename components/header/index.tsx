import React from "react";
import { Link } from "../link";
import { Snippet } from "../author/snippet";
import { Img } from "../image";
import { NavData } from "../../pages/posts/[slug]";

export const Header2 = (props: NavData) => {
  const dt = {
    ...props.data,
  };
  const [activeItem, setActiveItem] = React.useState(null);
  const [isMobileNavOpen, setMobileNavOpen] = React.useState(false);

  const setItem = (item: string) => {
    if (item === activeItem) {
      setActiveItem(null);
    } else {
      setActiveItem(item);
    }
  };

  const toggleMobileNav = () => {
    setMobileNavOpen(!isMobileNavOpen);
  };

  return (
    <div className="relative bg-white">
      <Header
        menu={props}
        onItemSelect={setItem}
        toggleMobileNav={toggleMobileNav}
      />
      {dt.items
        .filter(
          (item) =>
            ["NavNavItemsNavItemMore", "NavNavItemsNavItemPopout"].includes(
              item.__typename
            ) && activeItem === item.label
        )
        .map((item) => {
          return (
            <div className="z-20 relative">
              <PopoutNav {...item} />
            </div>
          );
        })}

      {/* <MobileNav
        {...dt}
        isOpen={isMobileNavOpen}
        toggleMobileNav={toggleMobileNav}
      /> */}
    </div>
  );
};

type PopoutNavType = NavData["data"]["items"][number];
const PopoutNav = (props: PopoutNavType) => {
  // const PopoutNav = (props: Object.Path<Tina.NavFragment, ["data", "items"]>) => {
  // type FlatCompany = HybridDeepPick<Company, { "addressId": ["address", "id"] }>

  // const PopoutNav = (props: DeepPick<Tina.NavFragment, {"data", "data"}>) => {
  switch (props.__typename) {
    case "NavNavItemsNavItemPopout":
      {
        /* Solutions menu */
      }
      {
        /*
    'Solutions' flyout menu, show/hide based on flyout menu state.

    Entering: "transition ease-out duration-200"
From: "opacity-0 -translate-y-1"
To: "opacity-100 translate-y-0"
    Leaving: "transition ease-in duration-150"
From: "opacity-100 translate-y-0"
To: "opacity-0 -translate-y-1"
  */
      }
      // return <div>Popoput</div>;
      return <IconNav {...props} />;
    case "NavNavItemsNavItemMore":
      {
        /* More menu */
      }
      {
        /*
    'More' flyout menu, show/hide based on flyout menu state.

    Entering: "transition ease-out duration-200"
From: "opacity-0 -translate-y-1"
To: "opacity-100 translate-y-0"
    Leaving: "transition ease-in duration-150"
From: "opacity-100 translate-y-0"
To: "opacity-0 -translate-y-1"
  */
      }
      // return <div>More</div>;
      return <MoreNav {...props} />;
    default:
      throw new Error("Must provide popout type");
      return <div>none</div>;
  }
};

type OnItemSelect = (item: string) => void;

const Header = (props: {
  menu: NavData;
  onItemSelect: OnItemSelect;
  toggleMobileNav: () => void;
}) => {
  return (
    <div className="relative z-20 shadow">
      <div className="max-w-7xl mx-auto flex justify-between items-center px-4 py-5 sm:px-6 sm:py-4 lg:px-8 md:justify-start md:space-x-10">
        <Logo />
        {/* <MobileButton onClick={props.toggleMobileNav} /> */}
        <MainNav menu={props.menu} onItemSelect={props.onItemSelect} />
      </div>
    </div>
  );
};

const MainNav = (props: { menu: NavData; onItemSelect: OnItemSelect }) => {
  return (
    <div className="hidden md:flex-1 md:flex md:items-center md:justify-between">
      <nav className="flex space-x-10">
        {props.menu.data.items.map((item) => {
          return <MainNavItem {...item} onItemSelect={props.onItemSelect} />;
        })}
      </nav>
      {props.menu.data.show_auth && <DesktopAuth />}
    </div>
  );
};

const DesktopAuth = (props) => {
  return (
    <div className="flex items-center md:ml-12">
      <Link href={props.signIn.value}>
        <a className="text-base font-medium text-gray-500 hover:text-gray-900">
          {props.signIn.label}
        </a>
      </Link>
      <Link href={props.signUp.value}>
        <a className="ml-8 inline-flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-steel-medium hover:bg-steel-dark">
          {props.signUp.label}
        </a>
      </Link>
    </div>
  );
};

type MainNavItemProps = NavData["data"]["items"][number];

const MainNavItem = (
  props: MainNavItemProps & { onItemSelect: (string: string) => void }
) => {
  switch (props.__typename) {
    case "NavNavItemsNavItemPopout":
    case "NavNavItemsNavItemMore":
      return <MainNavPopoutItem {...props} onItemSelect={props.onItemSelect} />;
    default:
      return <MainNavLink {...props} />;
  }
};

const MainNavPopoutItem = (
  props: MainNavItemProps & { onItemSelect: (string: string) => void }
) => {
  return (
    <div className="relative">
      {/* Item active: "text-gray-900", Item inactive: "text-gray-500" */}
      <button
        type="button"
        onClick={() => props.onItemSelect(props.label)}
        className="group bg-white rounded-md text-gray-500 inline-flex items-center text-base font-medium hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-steel-light"
      >
        <span>{props.label}</span>
        {/*
    Heroicon name: solid/chevron-down

    Item active: "text-gray-600", Item inactive: "text-gray-400"
  */}
        <svg
          className="ml-2 h-5 w-5 text-gray-400 group-hover:text-gray-500"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 20 20"
          fill="currentColor"
          aria-hidden="true"
        >
          <path
            fillRule="evenodd"
            d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
            clipRule="evenodd"
          />
        </svg>
      </button>
    </div>
  );
};
type MainNavLinkProps = Extract<
  MainNavItemProps,
  { __typename: "NavNavItemsNavItemLink" }
>;
const MainNavLink = (props: MainNavLinkProps) => {
  // const MainNavLink = (props: <MainNavItemType, >) => {
  return (
    <Link href={props.value}>
      <a className="text-base font-medium text-gray-500 hover:text-gray-900">
        {props.label}
      </a>
    </Link>
  );
};

const FromTheBlog = (props: MoreNavProps) => {
  return (
    <div className="bg-gray-50 px-4 py-8 sm:py-12 sm:px-6 lg:px-8 xl:pl-12">
      <div>
        <h3 className="text-sm font-medium tracking-wide text-gray-500 uppercase">
          {/* {props.label} */}
          From The Blog
        </h3>
        <ul className="mt-6 space-y-6">
          {props.from_the_blog?.map((child) => {
            const post = child.reference;
            // FIXING Tina issue
            if (!post.sys) {
              return <div />;
            }
            return (
              <li className="flow-root">
                <Link href={`/posts/${post?.sys?.breadcrumbs.join("/")}`}>
                  <a className="-m-3 p-3 flex rounded-lg hover:bg-gray-100">
                    <div className="hidden sm:block flex-shrink-0">
                      <Img
                        className="w-32 h-20 object-cover rounded-md"
                        src={post.data.image}
                        width={120}
                        quality={80}
                        alt=""
                      />
                    </div>
                    <div className="w-0 flex-1 sm:ml-8">
                      <h4 className="text-base font-medium text-gray-900 truncate">
                        {post.data.title}
                      </h4>
                      <p className="mt-1 text-sm text-gray-500 line-clamp-3">
                        {post.data.preface}
                      </p>
                    </div>
                  </a>
                </Link>
              </li>
            );
          })}
        </ul>
      </div>
      <div className="mt-6 text-sm font-medium">
        <Link href={props.read_more.value}>
          <a className="text-steel-medium hover:text-steel-light">
            {" "}
            {props.read_more?.label} <span aria-hidden="true">â†’</span>
          </a>
        </Link>
      </div>
    </div>
  );
};

const IconNav = (
  props: Tina.FilterByTypename<PopoutNavType, "NavItemPopout_Data">
) => {
  return (
    <div className="hidden md:block absolute z-10 inset-x-0 transform shadow-lg">
      <div className="bg-white">
        <div className="max-w-7xl mx-auto grid gap-y-6 px-4 py-6 sm:grid-cols-2 sm:gap-8 sm:px-6 sm:py-8 lg:grid-cols-4 lg:px-8 lg:py-12 xl:py-16">
          {props.children?.map((item, index) => {
            return <IconNavItem {...item} index={index} />;
          })}
        </div>
      </div>
      <div className="bg-gray-50">
        <div className="max-w-7xl mx-auto space-y-6 px-4 py-5 sm:flex sm:space-y-0 sm:space-x-10 sm:px-6 lg:px-8">
          {props.extra?.map((item) => {
            return (
              <div className="flow-root">
                <Link href={item.value}>
                  <a className="-m-3 p-3 flex items-center rounded-md text-base font-medium text-gray-900 hover:bg-gray-100">
                    {/* Heroicon name: outline/play */}
                    <svg
                      className="flex-shrink-0 h-6 w-6 text-gray-400"
                      xmlns="http://www.w3.org/2000/svg"
                      fill="none"
                      viewBox="0 0 24 24"
                      stroke="currentColor"
                      aria-hidden="true"
                    >
                      <path
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth={2}
                        d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z"
                      />
                      <path
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth={2}
                        d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                      />
                    </svg>
                    <span className="ml-3">{item.label}</span>
                  </a>
                </Link>
              </div>
            );
          })}
        </div>
      </div>
    </div>
  );
};

const IconSvg = (props: {
  name: "nutrition" | "one" | "list" | "strength";
}) => {
  switch (props.name) {
    case "one":
      return (
        <>
          <path
            d="M5.4888 7H2.72279L0 8.6543V11.1895L2.42026 9.75H2.48509V18H5.4888V7Z"
            fill="currentColor"
          />
          <path
            d="M12.4335 16.8076C13.2277 16.8076 13.9354 16.1416 13.9462 15.3037C13.9354 14.4873 13.2277 13.8213 12.4335 13.8213C11.5962 13.8213 10.9101 14.4873 10.9209 15.3037C10.9101 16.1416 11.5962 16.8076 12.4335 16.8076ZM12.4335 11.5225C13.2277 11.5225 13.9354 10.8564 13.9462 10.0186C13.9354 9.20215 13.2277 8.53613 12.4335 8.53613C11.5962 8.53613 10.9101 9.20215 10.9209 10.0186C10.9101 10.8564 11.5962 11.5225 12.4335 11.5225Z"
            fill="currentColor"
          />
          <path
            d="M24 7H21.234L18.5112 8.6543V11.1895L20.9315 9.75H20.9963V18H24V7Z"
            fill="currentColor"
          />
        </>
      );
    case "nutrition":
      return (
        <>
          <g
            fill="currentColor"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
          >
            <line fill="none" x1="15" x2="8.05" y1="9" y2="15.95" />
            <line fill="none" x1="15" x2="6.072" y1="9" y2="9.992" />
            <line fill="none" x1="15" x2="14.008" y1="9" y2="17.928" />
            <path
              d="M7.49,1.49 C4.211,3.394,2,6.935,2,11c0,6.075,4.925,11,11,11c4.065,0,7.606-2.211,9.51-5.49L7.49,1.49z"
              fill="none"
              stroke="currentColor"
            />
            <path
              d="M10.477,4.477C7.859,5.49,6,8.025,6,11 c0,3.866,3.134,7,7,7c2.975,0,5.51-1.859,6.524-4.476"
              fill="none"
              stroke="currentColor"
            />
          </g>
        </>
      );
    case "list":
      return (
        <>
          <path
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth={2}
            d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01"
          />
        </>
      );

    case "strength":
      return (
        <>
          <g
            fill="currentColor"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
          >
            <path
              d="M6.03,9.266,5.422,4.372A3,3,0,0,1,8.4,1h7.2a3,3,0,0,1,2.976,3.372L17.97,9.266"
              fill="none"
            />
            <path
              d="M6.349,23h11.3a9,9,0,1,0-11.3,0Z"
              fill="none"
              stroke="currentColor"
            />
            <circle cx="12" cy="16" fill="none" r="3" />
          </g>
        </>
      );
    default:
      return null;
  }
};

const IconNavItem = (props) => {
  const image =
    props.index === 0
      ? "list"
      : props.index === 1
      ? "one"
      : props.index === 2
      ? "strength"
      : "nutrition";
  return (
    <Link href={props.value}>
      <a className="-m-3 p-3 flex flex-col justify-between rounded-lg hover:bg-gray-50">
        <div className="flex md:h-full lg:flex-col">
          <div className="flex-shrink-0">
            <span className="inline-flex items-center justify-center h-10 w-10 rounded-md bg-steel-light text-white sm:h-12 sm:w-12">
              <svg
                className="h-6 w-6"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <IconSvg name={image} />
              </svg>
            </span>
          </div>
          <div className="ml-4 md:flex-1 md:flex md:flex-col md:justify-between lg:ml-0 lg:mt-4">
            <div>
              <p className="text-base font-medium text-gray-900">
                {props.label}
              </p>
              <p className="mt-1 text-sm text-gray-500">{props.description}</p>
            </div>
            <p className="mt-2 text-sm font-medium text-steel-medium lg:mt-4">
              Learn more <span aria-hidden="true">â†’</span>
            </p>
          </div>
        </div>
      </a>
    </Link>
  );
};

const MobileButton = (props: { onClick: () => void }) => {
  return (
    <div className="-mr-2 -my-2 md:hidden">
      <button
        type="button"
        onClick={props.onClick}
        className="bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-steel-light"
      >
        <span className="sr-only">Open menu</span>
        {/* Heroicon name: outline/menu */}
        <svg
          className="h-6 w-6"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
          aria-hidden="true"
        >
          <path
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth={2}
            d="M4 6h16M4 12h16M4 18h16"
          />
        </svg>
      </button>
    </div>
  );
};

export const Logo = (props) => {
  const image =
    "https://res.cloudinary.com/deuzrsg3m/image/upload/v1612715590/uploads/shirt-2_u4ryhw.png";
  return (
    <Link href="/">
      <a className="-m-3 p-3 flex flex-col justify-between rounded-lg hover:bg-gray-50">
        <div className="flex md:h-full lg:flex-col">
          <div className="flex-shrink-0">
            {/* <img
            className="inline-flex items-center justify-center h-10 w-10 rounded-full bg-steel-light text-white sm:h-12 sm:w-12"
            src={image}
          /> */}
            <svg
              className="h-16 w-16"
              viewBox="0 0 296 197"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M22.6095 105.607C18.9819 105.607 15.7245 104.645 12.8372 102.72C9.94995 100.869 7.50688 98.315 5.50801 95.0576C3.50913 91.8001 2.02849 88.0245 1.06607 83.7306C0.177678 79.4367 -0.155468 74.8837 0.0666291 70.0716C0.362759 64.9634 1.1401 59.7071 2.39865 54.3027C3.6572 48.8243 5.35994 43.494 7.50688 38.3118C9.65382 33.1295 12.1339 28.2063 14.9471 23.5423C17.8344 18.8783 20.9808 14.8065 24.3863 11.327C27.8658 7.84743 31.5674 5.10823 35.4911 3.10936C39.4148 1.03645 43.5236 0 47.8175 0C50.6307 0 52.9998 0.703308 54.9246 2.10992C56.8495 3.51654 58.3301 5.36735 59.3666 7.66235C60.477 9.88332 61.1804 12.4004 61.4765 15.2137C61.7726 18.0269 61.7356 20.8401 61.3654 23.6533C61.0693 26.3925 60.44 29.0577 59.4776 31.6488C58.5892 34.1659 57.4787 36.2388 56.1462 37.8676C54.4434 40.0145 52.8887 41.162 51.4821 41.3101C50.1495 41.3841 48.854 40.9769 47.5954 40.0885C47.0772 39.6443 46.559 39.1261 46.0407 38.5338C45.5225 38.0156 44.9673 37.3863 44.375 36.646C43.7827 35.8317 43.1535 34.8322 42.4872 33.6477C43.8938 33.1295 45.1894 32.2781 46.3739 31.0936C47.5584 29.835 48.5578 28.4284 49.3722 26.8738C50.2606 25.3191 50.9269 23.6904 51.3711 21.9876C51.8893 20.2108 52.1854 18.4711 52.2595 16.7683C52.3335 15.4357 52.2965 14.1402 52.1484 12.8816C52.0003 11.5491 51.7042 10.4015 51.26 9.43913C50.8158 8.40267 50.1865 7.58832 49.3722 6.99606C48.6319 6.32977 47.6694 5.99662 46.4849 5.99662C43.5236 5.99662 40.6364 7.14412 37.8231 9.43913C35.0099 11.6601 32.3447 14.6584 29.8276 18.4341C27.3846 22.1357 25.0896 26.3925 22.9426 31.2046C20.8697 36.0167 19.0559 40.9769 17.5013 46.0852C15.9466 51.1934 14.688 56.2276 13.7256 61.1878C12.7632 66.1479 12.1709 70.6639 11.9488 74.7357C11.6527 79.8439 11.8378 83.9897 12.5041 87.1731C13.1704 90.3565 14.0587 92.8366 15.1692 94.6134C16.3538 96.4642 17.6123 97.6857 18.9449 98.278C20.2775 98.9443 21.499 99.2774 22.6095 99.2774C24.6824 99.2774 27.0144 98.315 29.6055 96.3901C32.1967 94.4653 34.6768 91.8372 37.0458 88.5057C39.4148 85.2483 41.5248 81.4726 43.3756 77.1787C45.3004 72.8849 46.67 68.3689 47.4844 63.6308C45.6336 63.6308 43.7457 63.6678 41.8209 63.7419C39.9701 63.7419 38.1933 63.7789 36.4906 63.8529C34.7878 63.927 33.2701 64.038 31.9376 64.1861C30.605 64.2601 29.5685 64.3711 28.8282 64.5192C28.31 64.2971 27.9398 64.038 27.7177 63.7419C27.5697 63.4457 27.4216 63.1126 27.2735 62.7424C27.1255 62.4463 27.0514 62.0761 27.0514 61.6319C27.0514 61.1878 27.1255 60.7806 27.2735 60.4104C27.4216 60.0403 27.6067 59.6701 27.8288 59.2999C28.0509 58.8557 28.347 58.4115 28.7172 57.9673C31.0862 57.5232 33.4182 57.153 35.7132 56.8569C38.0082 56.5607 40.3773 56.3386 42.8203 56.1906C45.3374 55.9685 48.0026 55.8204 50.8158 55.7464C53.7031 55.5983 56.9235 55.4873 60.477 55.4132C61.9577 55.3392 62.8461 55.5243 63.1422 55.9685C63.5124 56.4127 63.4013 57.5232 62.8091 59.2999C62.3649 60.7065 61.7726 61.854 61.0323 62.7424C60.366 63.6308 59.2185 64.001 57.5898 63.8529C57.0716 63.8529 56.6644 63.8159 56.3683 63.7419C55.702 68.1098 54.2953 72.7368 52.1484 77.6229C50.0015 82.5091 47.3733 87.0251 44.264 91.1709C41.1546 95.3167 37.7121 98.7592 33.9364 101.498C30.2348 104.238 26.4592 105.607 22.6095 105.607Z"
                fill="#4F4F4F"
              />
              <path
                d="M100.788 66.296C100.047 69.1092 99.0479 71.7374 97.7894 74.1804C96.5308 76.6235 95.0132 78.7334 93.2364 80.5102C91.5336 82.287 89.5718 83.6566 87.3508 84.619C85.2039 85.6555 82.8348 86.1737 80.2437 86.1737C77.2084 86.1737 74.8023 85.5074 73.0255 84.1748C71.3228 82.9163 70.0272 81.3246 69.1388 79.3997C68.3245 77.4749 67.8433 75.365 67.6952 73.07C67.4731 70.7749 67.3621 68.628 67.3621 66.6291C67.3621 65.2225 67.5471 63.6678 67.9173 61.9651C68.2134 60.2624 68.6576 58.5226 69.2499 56.7458C69.8421 54.969 70.5825 53.1923 71.4709 51.4155C72.4333 49.6387 73.5438 48.01 74.8023 46.5293C75.2465 45.2708 75.9128 44.1603 76.8012 43.1979C77.7636 42.2355 78.8371 41.4581 80.0216 40.8659C81.2801 40.1996 82.6127 39.7184 84.0193 39.4222C85.426 39.0521 86.7956 38.867 88.1281 38.867C88.3502 38.867 88.5353 38.904 88.6834 38.978C88.9055 39.0521 89.1276 39.1261 89.3497 39.2001C90.3121 39.2742 91.4966 39.6443 92.9032 40.3106C94.3839 40.9769 95.7905 41.9764 97.1231 43.3089C98.5297 44.6415 99.7142 46.3443 100.677 48.4172C101.639 50.416 102.12 52.8591 102.12 55.7464C102.12 56.3386 102.083 57.079 102.009 57.9673C101.935 58.7817 101.861 59.485 101.787 60.0773C103.49 59.411 105.267 58.5966 107.117 57.6342C108.968 56.6718 110.745 55.6723 112.448 54.6359C114.225 53.5254 115.853 52.4149 117.334 51.3044C118.815 50.1939 119.999 49.1945 120.887 48.3061C121.628 47.6398 122.257 47.2697 122.775 47.1956C123.294 47.1216 123.664 47.2697 123.886 47.6398C124.108 48.01 124.145 48.5282 123.997 49.1945C123.849 49.8608 123.442 50.6011 122.775 51.4155C122.405 51.8597 121.443 52.7481 119.888 54.0806C118.407 55.4132 116.631 56.8569 114.558 58.4115C112.485 59.9662 110.227 61.4839 107.784 62.9645C105.341 64.4452 103.009 65.5557 100.788 66.296ZM82.0205 49.4166C81.7984 50.0829 81.6873 50.7862 81.6873 51.5265C81.6873 52.711 81.7614 53.9696 81.9094 55.3022C82.0575 56.5607 82.4276 57.7082 83.0199 58.7447C83.6122 59.7811 84.5376 60.6695 85.7961 61.4099C87.1287 62.0761 88.9425 62.4093 91.2375 62.4093C91.6077 62.4093 91.9778 62.4093 92.348 62.4093C92.7181 62.3353 93.0883 62.2612 93.4585 62.1872C93.6806 61.2248 93.8657 60.3734 94.0137 59.6331C94.2358 58.8187 94.3469 58.1154 94.3469 57.5232C94.4949 56.1165 94.4949 54.6729 94.3469 53.1923C94.1988 51.7116 93.9027 50.379 93.4585 49.1945C93.0883 47.936 92.5701 46.9365 91.9038 46.1962C91.3115 45.3818 90.5712 44.9747 89.6828 44.9747C88.2762 44.9747 86.9066 45.3818 85.574 46.1962C84.3155 46.9365 83.131 48.01 82.0205 49.4166ZM74.9134 68.9612C74.9134 70.2937 74.9874 71.6263 75.1355 72.9589C75.2835 74.2175 75.5797 75.365 76.0238 76.4014C76.468 77.3638 77.0603 78.1782 77.8006 78.8445C78.5409 79.4367 79.5034 79.7329 80.6879 79.7329C82.0205 79.7329 83.242 79.4367 84.3525 78.8445C85.463 78.1782 86.4624 77.3638 87.3508 76.4014C88.2392 75.365 89.0165 74.2175 89.6828 72.9589C90.4231 71.6263 91.0524 70.2567 91.5706 68.8501C91.0524 68.9241 90.5342 68.9982 90.016 69.0722C89.5718 69.0722 89.0535 69.0722 88.4613 69.0722C85.6481 69.0722 83.205 68.2578 81.1321 66.6291C79.1332 64.9264 77.5785 62.7795 76.468 60.1883C76.0238 61.743 75.6537 63.2607 75.3576 64.7413C75.0614 66.222 74.9134 67.6286 74.9134 68.9612Z"
                fill="#4F4F4F"
              />
              <path
                d="M111.004 82.1759C114.262 68.4799 116.853 57.4861 118.778 49.1945C120.776 40.9029 122.294 34.5731 123.331 30.2052C124.515 25.0229 125.329 21.4324 125.774 19.4335C125.996 18.0269 126.181 16.6573 126.329 15.3247C126.477 14.1402 126.551 12.9186 126.551 11.6601C126.551 10.4015 126.44 9.25405 126.218 8.21759C126.81 7.84743 127.439 7.5513 128.106 7.3292C128.846 7.10711 129.549 6.92203 130.216 6.77396C131.03 6.55186 131.844 6.36678 132.659 6.21872C133.473 6.07065 134.213 5.99662 134.88 5.99662C135.472 5.99662 136.027 6.07065 136.545 6.21872C137.064 6.29275 137.397 6.51485 137.545 6.88501C137.989 7.25517 138.174 7.9955 138.1 9.10598C138.1 10.2165 138.026 11.364 137.878 12.5485C137.582 13.9551 137.249 15.4728 136.878 17.1015C135.99 20.2849 134.769 24.8749 133.214 30.8715C131.881 35.9797 130.067 42.9388 127.772 51.7486C125.552 60.5585 122.738 71.6633 119.333 85.0632C118.963 85.4334 118.518 85.6925 118 85.8405C117.482 85.9886 117.001 86.0626 116.557 86.0626C116.038 86.0626 115.483 86.0256 114.891 85.9516C114.373 85.8035 113.854 85.5814 113.336 85.2853C112.892 84.9892 112.448 84.582 112.004 84.0638C111.559 83.6196 111.226 82.9903 111.004 82.1759Z"
                fill="#4F4F4F"
              />
              <path
                d="M172.858 62.7424C172.488 65.0374 172.118 67.2214 171.748 69.2943C171.452 71.3672 171.267 73.0329 171.192 74.2915C171.118 76.1423 171.452 77.4749 172.192 78.2892C172.932 79.1036 173.747 79.5108 174.635 79.5108C175.671 79.5108 176.93 78.9925 178.411 77.9561C179.965 76.9196 181.594 75.6241 183.297 74.0694C185 72.5147 186.702 70.812 188.405 68.9612C190.108 67.1103 191.662 65.3706 193.069 63.7419C194.55 62.0391 195.771 60.5585 196.734 59.2999C197.77 58.0414 198.473 57.227 198.844 56.8569C199.288 56.4127 199.732 56.1536 200.176 56.0795C200.694 56.0055 201.102 56.0795 201.398 56.3016C201.694 56.5237 201.842 56.9309 201.842 57.5232C201.842 58.1154 201.546 58.8557 200.953 59.7441C200.065 61.1507 198.918 62.8165 197.511 64.7413C196.104 66.5921 194.55 68.517 192.847 70.5158C191.144 72.5147 189.33 74.4766 187.406 76.4014C185.555 78.3262 183.667 80.029 181.742 81.5096C179.891 82.9903 178.077 84.1748 176.301 85.0632C174.598 86.0256 173.043 86.5068 171.637 86.5068C170.6 86.5068 169.601 86.2107 168.638 85.6184C167.75 85.0262 166.936 84.2488 166.195 83.2864C165.455 82.324 164.863 81.2505 164.419 80.066C164.048 78.8815 163.9 77.697 163.974 76.5125C164.048 75.9942 164.159 75.1058 164.307 73.8473C161.198 77.3268 158.052 80.103 154.868 82.1759C151.759 84.1748 148.761 85.1742 145.873 85.1742C144.837 85.1742 143.726 84.9151 142.542 84.3969C141.357 83.8787 140.284 83.0273 139.322 81.8428C138.433 80.6583 137.693 79.1036 137.101 77.1787C136.508 75.2539 136.286 72.9219 136.434 70.1827C136.656 65.8888 137.508 61.817 138.988 57.9673C140.469 54.1177 142.32 50.7862 144.541 47.973C146.836 45.0857 149.39 42.8277 152.203 41.199C155.09 39.4963 157.978 38.6449 160.865 38.6449C162.124 38.6449 163.271 38.978 164.307 39.6443C165.344 40.2366 166.232 41.051 166.973 42.0874C167.713 43.0498 168.305 44.1233 168.749 45.3078C169.268 46.4923 169.638 47.6028 169.86 48.6393C170.378 46.4923 170.859 44.3824 171.304 42.3095C171.748 40.2366 172.192 38.2747 172.636 36.4239C173.376 33.6847 174.154 30.7234 174.968 27.54C175.708 24.8008 176.56 21.6545 177.522 18.1009C178.485 14.5474 179.558 10.8087 180.743 6.88501C181.483 6.29275 182.186 5.84856 182.853 5.55243C183.519 5.2563 184.148 5.0342 184.74 4.88614C185.407 4.66404 186.036 4.55299 186.628 4.55299C187.369 4.55299 188.035 4.66404 188.627 4.88614C189.219 5.0342 189.701 5.51541 190.071 6.32977C190.515 7.07009 190.811 8.21759 190.959 9.77227C191.107 11.327 191.107 13.4369 190.959 16.102C190.811 19.3595 190.219 22.913 189.182 26.7627C188.22 30.6124 186.924 34.6101 185.296 38.7559C183.667 42.8277 181.779 46.9365 179.632 51.0823C177.559 55.1541 175.301 59.0408 172.858 62.7424ZM166.306 64.1861C166.602 62.7795 166.862 61.3728 167.084 59.9662C167.38 58.5596 167.713 57.116 168.083 55.6353C167.935 55.7094 167.787 55.7834 167.639 55.8574C167.565 55.9315 167.454 56.0055 167.306 56.0795C166.491 56.4497 165.936 56.4497 165.64 56.0795C165.344 55.6353 165.196 54.969 165.196 54.0806C165.196 53.6365 165.159 52.8591 165.085 51.7486C165.011 50.5641 164.789 49.3796 164.419 48.1951C164.122 46.9365 163.641 45.8631 162.975 44.9747C162.309 44.0122 161.383 43.531 160.199 43.531C158.496 43.531 156.756 44.4194 154.979 46.1962C153.203 47.8989 151.537 50.0089 149.982 52.526C148.428 54.969 147.132 57.5972 146.095 60.4104C145.059 63.2236 144.467 65.7407 144.319 67.9617C144.171 71.5153 144.615 74.0694 145.651 75.6241C146.688 77.1787 148.094 77.9561 149.871 77.9561C151.204 77.9561 152.647 77.4379 154.202 76.4014C155.831 75.365 157.385 74.1064 158.866 72.6258C160.421 71.1451 161.827 69.6274 163.086 68.0728C164.419 66.5181 165.492 65.2225 166.306 64.1861Z"
                fill="#4F4F4F"
              />
              <path
                d="M242.819 60.8546C240.598 64.112 238.081 67.2954 235.267 70.4048C232.454 73.4401 229.456 76.1793 226.273 78.6224C223.163 80.9914 219.943 82.9163 216.611 84.3969C213.354 85.8776 210.171 86.6179 207.061 86.6179C205.432 86.6179 203.656 86.2107 201.731 85.3963C199.88 84.656 198.177 83.4715 196.623 81.8428C195.068 80.2141 193.809 78.1042 192.847 75.513C191.959 72.9219 191.699 69.7755 192.07 66.0739C192.366 63.0386 193.291 59.8552 194.846 56.5237C196.475 53.1182 198.436 50.0089 200.731 47.1956C203.1 44.3824 205.729 42.0504 208.616 40.1996C211.577 38.3488 214.538 37.4234 217.5 37.4234C220.313 37.4234 222.349 38.1267 223.607 39.5333C224.866 40.9399 225.421 42.6797 225.273 44.7526C225.051 47.0476 224.385 49.1575 223.274 51.0823C222.238 53.0072 220.979 54.7469 219.499 56.3016C218.018 57.8563 216.426 59.2629 214.724 60.5215C213.095 61.78 211.54 62.9275 210.059 63.964C208.431 65.0745 206.876 66.1479 205.395 67.1844C203.915 68.1468 202.619 69.0352 201.509 69.8495C201.583 71.7004 201.916 73.255 202.508 74.5136C203.1 75.7721 203.841 76.8086 204.729 77.6229C205.618 78.3633 206.617 78.9185 207.727 79.2887C208.912 79.5848 210.096 79.7329 211.281 79.7329C213.798 79.7329 216.426 78.9555 219.165 77.4008C221.905 75.7721 224.57 73.8473 227.161 71.6263C229.826 69.3313 232.269 66.9623 234.49 64.5192C236.785 62.0761 238.673 59.9662 240.154 58.1894C240.672 57.5972 241.19 57.264 241.708 57.19C242.301 57.0419 242.745 57.116 243.041 57.4121C243.411 57.6342 243.596 58.0784 243.596 58.7447C243.596 59.3369 243.337 60.0403 242.819 60.8546ZM214.39 43.7531C213.502 43.7531 212.429 44.1973 211.17 45.0857C209.985 45.9741 208.801 47.2697 207.616 48.9724C206.432 50.6011 205.321 52.637 204.285 55.0801C203.248 57.4491 202.471 60.1883 201.953 63.2977C202.841 62.6314 203.804 61.9651 204.84 61.2988C205.877 60.5585 206.913 59.7811 207.95 58.9668C211.133 56.5237 213.354 54.3768 214.612 52.526C215.871 50.6752 216.574 49.0835 216.722 47.7509C216.87 46.3443 216.722 45.3448 216.278 44.7526C215.834 44.0863 215.205 43.7531 214.39 43.7531Z"
                fill="#4F4F4F"
              />
              <path
                d="M267.805 86.7289C266.102 86.7289 264.621 86.3958 263.363 85.7295C262.178 85.1372 261.216 84.3229 260.476 83.2864C259.735 82.25 259.254 81.0654 259.032 79.7329C258.81 78.3262 258.884 76.8456 259.254 75.2909C259.476 74.2545 259.846 72.8849 260.364 71.1821C260.883 69.4053 261.401 67.5175 261.919 65.5186C262.511 63.4457 263.03 61.4099 263.474 59.411C263.992 57.3381 264.325 55.4873 264.473 53.8586C264.621 52.1558 264.547 50.7862 264.251 49.7498C263.955 48.6393 263.326 48.084 262.363 48.084C261.179 48.084 259.957 48.4912 258.699 49.3056C257.44 50.0459 256.145 51.0823 254.812 52.4149C253.553 53.7475 252.258 55.3022 250.925 57.079C249.667 58.7817 248.408 60.5585 247.15 62.4093C246.483 64.9264 245.928 67.1474 245.484 69.0722C245.04 70.923 244.633 72.6258 244.262 74.1804C243.966 75.6611 243.67 76.9937 243.374 78.1782C243.078 79.2887 242.819 80.3621 242.597 81.3986C242.375 82.1389 241.708 82.8792 240.598 83.6196C239.487 84.2859 238.303 84.8411 237.044 85.2853C235.786 85.7295 234.712 85.9516 233.824 85.9516C232.861 85.9516 232.454 85.6184 232.602 84.9521C232.676 84.508 232.935 83.5085 233.38 81.9538C233.75 80.3992 234.231 78.5854 234.823 76.5125C235.342 74.3655 235.897 72.1075 236.489 69.7385C237.081 67.3695 237.637 65.1115 238.155 62.9645C238.525 61.2618 238.932 59.374 239.376 57.3011C239.746 55.5243 240.191 53.4514 240.709 51.0823C241.301 48.7133 241.967 46.1222 242.708 43.3089C243.226 42.8647 243.744 42.5316 244.262 42.3095C244.855 42.0134 245.447 41.7913 246.039 41.6432C246.631 41.4211 247.261 41.273 247.927 41.199C248.519 41.199 249.112 41.236 249.704 41.3101C250.222 41.3841 250.74 41.5322 251.258 41.7543C251.851 41.9023 252.369 42.1614 252.813 42.5316C252.591 43.0498 252.332 43.7901 252.036 44.7526C251.74 45.641 251.444 46.6034 251.147 47.6398C250.851 48.8243 250.481 50.0459 250.037 51.3044C250.999 49.9719 252.073 48.6393 253.257 47.3067C254.516 45.9001 255.848 44.6415 257.255 43.531C258.736 42.4205 260.29 41.5322 261.919 40.8659C263.548 40.1255 265.214 39.7554 266.916 39.7554C268.323 39.7554 269.582 40.1626 270.692 40.9769C271.802 41.7913 272.654 42.9388 273.246 44.4194C273.912 45.826 274.283 47.5288 274.357 49.5277C274.505 51.5265 274.246 53.7105 273.579 56.0795L272.358 60.9657C271.988 62.5203 271.506 64.3711 270.914 66.5181C270.396 68.591 269.73 70.886 268.915 73.4031C268.471 75.0318 268.286 76.4384 268.36 77.6229C268.508 78.8075 269.248 79.3997 270.581 79.3997C271.914 79.3997 273.579 78.5854 275.578 76.9567C277.651 75.3279 279.724 73.3661 281.797 71.0711C283.87 68.7761 285.832 66.4441 287.682 64.075C289.533 61.6319 290.94 59.6701 291.902 58.1894C292.569 57.227 293.198 56.5977 293.79 56.3016C294.382 56.0055 294.827 55.9685 295.123 56.1906C295.493 56.4127 295.678 56.9309 295.678 57.7453C295.678 58.4856 295.382 59.448 294.79 60.6325C294.271 61.669 293.457 63.0386 292.346 64.7413C291.31 66.4441 290.051 68.2578 288.571 70.1827C287.09 72.1075 285.498 74.0694 283.796 76.0683C282.093 77.9931 280.316 79.7699 278.465 81.3986C276.615 82.9533 274.764 84.2118 272.913 85.1742C271.136 86.2107 269.433 86.7289 267.805 86.7289Z"
                fill="#4F4F4F"
              />
              <path
                d="M69.5461 196.211C65.8445 196.211 62.4761 195.322 59.4407 193.545C56.4794 191.769 53.9253 189.326 51.7784 186.216C49.7055 183.107 48.1138 179.479 47.0033 175.333C45.9668 171.114 45.5226 166.635 45.6707 161.897C45.8188 157.455 46.374 152.642 47.3364 147.46C48.3729 142.278 49.8165 137.096 51.6673 131.913C53.5181 126.657 55.7391 121.623 58.3302 116.811C60.9954 111.925 64.0307 107.631 67.4362 103.929C70.8417 100.228 74.6174 97.2663 78.7632 95.0453C82.909 92.7503 87.462 91.6028 92.4221 91.6028C95.4575 91.6028 98.0116 92.2321 100.084 93.4906C102.231 94.6751 103.934 96.2668 105.193 98.2657C106.525 100.265 107.451 102.523 107.969 105.04C108.487 107.557 108.709 110.111 108.635 112.702C108.487 115.145 108.117 117.514 107.525 119.809C107.007 122.104 106.229 124.177 105.193 126.028C104.23 127.805 103.009 129.248 101.528 130.359C100.122 131.395 98.4928 131.913 96.642 131.913C95.7536 131.839 94.9022 131.543 94.0879 131.025C93.3476 130.581 92.5702 129.915 91.7559 129.026C91.0155 128.138 90.3122 126.842 89.6459 125.139C91.6448 124.325 93.1995 122.918 94.31 120.92C95.4945 118.847 96.3829 116.7 96.9751 114.479C97.6414 111.962 98.0856 109.148 98.3077 106.039C98.4558 103.004 97.8265 100.783 96.4199 99.3762C95.0133 97.9696 93.4216 97.2663 91.6448 97.2663C88.1653 97.2663 84.5007 99.0801 80.651 102.708C76.8013 106.335 73.2107 111.258 69.8793 117.477C66.6219 123.622 63.8457 130.803 61.5507 139.021C59.3297 147.238 58.0341 155.937 57.664 165.117C57.5159 169.263 57.775 172.779 58.4413 175.667C59.1816 178.554 60.1811 180.923 61.4396 182.774C62.7722 184.624 64.2528 185.957 65.8815 186.771C67.5103 187.586 69.139 187.993 70.7677 187.993C73.3588 187.993 75.8019 187.438 78.0969 186.327C80.3919 185.217 82.4648 183.847 84.3156 182.218C86.2404 180.59 87.8692 178.887 89.2017 177.11C90.6084 175.407 91.6818 173.89 92.4221 172.557C92.9404 171.595 93.4956 171.003 94.0879 170.78C94.6801 170.558 95.1984 170.632 95.6426 171.003C96.0868 171.299 96.3829 171.817 96.5309 172.557C96.679 173.223 96.5309 174.038 96.0868 175C94.8282 177.517 93.2735 180.034 91.4227 182.552C89.6459 185.069 87.61 187.327 85.315 189.326C83.0941 191.398 80.651 193.064 77.9858 194.323C75.3207 195.581 72.5074 196.211 69.5461 196.211Z"
                fill="#4F4F4F"
              />
              <path
                d="M140.95 157.899C140.21 160.712 139.211 163.34 137.952 165.783C136.694 168.226 135.176 170.336 133.399 172.113C131.696 173.89 129.734 175.259 127.513 176.222C125.367 177.258 122.998 177.776 120.406 177.776C117.371 177.776 114.965 177.11 113.188 175.778C111.485 174.519 110.19 172.927 109.302 171.003C108.487 169.078 108.006 166.968 107.858 164.673C107.636 162.378 107.525 160.231 107.525 158.232C107.525 156.825 107.71 155.271 108.08 153.568C108.376 151.865 108.82 150.125 109.413 148.349C110.005 146.572 110.745 144.795 111.634 143.018C112.596 141.241 113.706 139.613 114.965 138.132C115.409 136.874 116.075 135.763 116.964 134.801C117.926 133.838 119 133.061 120.184 132.469C121.443 131.802 122.775 131.321 124.182 131.025C125.589 130.655 126.958 130.47 128.291 130.47C128.513 130.47 128.698 130.507 128.846 130.581C129.068 130.655 129.29 130.729 129.512 130.803C130.475 130.877 131.659 131.247 133.066 131.913C134.547 132.58 135.953 133.579 137.286 134.912C138.692 136.244 139.877 137.947 140.839 140.02C141.802 142.019 142.283 144.462 142.283 147.349C142.283 147.941 142.246 148.682 142.172 149.57C142.098 150.384 142.024 151.088 141.95 151.68C143.653 151.014 145.429 150.199 147.28 149.237C149.131 148.275 150.908 147.275 152.61 146.239C154.387 145.128 156.016 144.018 157.497 142.907C158.977 141.797 160.162 140.797 161.05 139.909C161.79 139.243 162.42 138.872 162.938 138.798C163.456 138.724 163.826 138.872 164.048 139.243C164.271 139.613 164.308 140.131 164.16 140.797C164.011 141.464 163.604 142.204 162.938 143.018C162.568 143.462 161.605 144.351 160.051 145.683C158.57 147.016 156.793 148.46 154.72 150.014C152.647 151.569 150.389 153.087 147.946 154.567C145.503 156.048 143.171 157.158 140.95 157.899ZM122.183 141.019C121.961 141.686 121.85 142.389 121.85 143.129C121.85 144.314 121.924 145.572 122.072 146.905C122.22 148.164 122.59 149.311 123.183 150.347C123.775 151.384 124.7 152.272 125.959 153.013C127.291 153.679 129.105 154.012 131.4 154.012C131.77 154.012 132.141 154.012 132.511 154.012C132.881 153.938 133.251 153.864 133.621 153.79C133.843 152.828 134.028 151.976 134.176 151.236C134.399 150.422 134.51 149.718 134.51 149.126C134.658 147.719 134.658 146.276 134.51 144.795C134.361 143.314 134.065 141.982 133.621 140.797C133.251 139.539 132.733 138.539 132.066 137.799C131.474 136.985 130.734 136.577 129.846 136.577C128.439 136.577 127.069 136.985 125.737 137.799C124.478 138.539 123.294 139.613 122.183 141.019ZM115.076 160.564C115.076 161.897 115.15 163.229 115.298 164.562C115.446 165.82 115.742 166.968 116.187 168.004C116.631 168.967 117.223 169.781 117.963 170.447C118.704 171.04 119.666 171.336 120.851 171.336C122.183 171.336 123.405 171.04 124.515 170.447C125.626 169.781 126.625 168.967 127.513 168.004C128.402 166.968 129.179 165.82 129.846 164.562C130.586 163.229 131.215 161.86 131.733 160.453C131.215 160.527 130.697 160.601 130.179 160.675C129.734 160.675 129.216 160.675 128.624 160.675C125.811 160.675 123.368 159.861 121.295 158.232C119.296 156.529 117.741 154.382 116.631 151.791C116.187 153.346 115.816 154.863 115.52 156.344C115.224 157.825 115.076 159.231 115.076 160.564Z"
                fill="#4F4F4F"
              />
              <path
                d="M209.8 153.457C208.764 154.937 207.431 156.788 205.803 159.009C204.174 161.156 202.471 163.34 200.694 165.561C198.992 167.708 197.289 169.707 195.586 171.558C193.958 173.335 192.588 174.593 191.477 175.333C190.737 175.778 189.886 176.148 188.923 176.444C187.961 176.74 186.961 176.925 185.925 176.999C184.963 177.073 184.037 176.999 183.149 176.777C182.26 176.629 181.483 176.333 180.817 175.889C180.151 175.37 179.595 174.63 179.151 173.668C178.781 172.853 178.411 171.78 178.041 170.447C177.744 169.115 177.633 167.449 177.707 165.45C175.931 168.411 173.969 170.706 171.822 172.335C169.675 173.89 167.639 175.037 165.714 175.778C163.493 176.592 161.272 177.073 159.051 177.221C158.015 177.221 156.904 176.851 155.72 176.111C154.535 175.444 153.536 174.371 152.722 172.89C151.907 171.336 151.389 169.374 151.167 167.005C150.945 164.562 151.241 161.674 152.055 158.343C153.092 153.827 154.72 149.718 156.941 146.017C159.236 142.315 161.716 139.169 164.382 136.577C167.047 133.912 169.675 131.913 172.266 130.581C174.857 129.248 177.004 128.656 178.707 128.804C180.706 129.174 182.334 129.766 183.593 130.581C184.629 131.321 185.296 132.432 185.592 133.912C185.962 135.319 185.37 137.207 183.815 139.576C184.852 139.354 185.703 139.206 186.369 139.132C187.11 139.058 187.665 139.021 188.035 139.021C188.479 139.021 188.775 139.058 188.923 139.132C188.997 139.28 189.034 139.613 189.034 140.131C189.034 140.575 188.923 141.427 188.701 142.685C188.479 143.944 188.146 145.646 187.702 147.793C187.258 149.94 186.665 152.717 185.925 156.122C185.777 156.788 185.629 157.418 185.481 158.01C185.407 158.528 185.296 159.083 185.148 159.676C185.074 160.194 184.963 160.823 184.815 161.563C184.666 162.304 184.481 163.229 184.259 164.34C184.185 165.006 184.148 165.746 184.148 166.561C184.222 167.301 184.37 168.004 184.592 168.67C184.815 169.337 185.148 169.892 185.592 170.336C186.11 170.706 186.813 170.891 187.702 170.891C188.442 170.891 189.405 170.447 190.589 169.559C191.774 168.596 193.032 167.412 194.365 166.005C195.697 164.525 197.067 162.933 198.474 161.23C199.954 159.453 201.324 157.751 202.582 156.122C203.841 154.493 204.951 153.05 205.914 151.791C206.95 150.533 207.691 149.607 208.135 149.015C208.727 148.349 209.319 147.978 209.912 147.904C210.504 147.756 210.948 147.904 211.244 148.349C211.54 148.793 211.577 149.459 211.355 150.347C211.207 151.236 210.689 152.272 209.8 153.457ZM177.263 158.343C177.633 156.862 178.078 155.123 178.596 153.124C179.114 151.125 179.558 149.2 179.928 147.349C180.299 145.498 180.558 143.981 180.706 142.796C180.928 141.538 180.891 140.945 180.595 141.019C180.225 141.093 179.817 141.204 179.373 141.353C179.003 141.501 178.522 141.612 177.93 141.686C177.337 141.76 176.745 141.871 176.153 142.019C176.745 140.834 177.078 139.872 177.152 139.132C177.3 138.317 177.337 137.688 177.263 137.244C177.189 136.726 177.041 136.318 176.819 136.022C176.005 135.356 174.561 135.911 172.488 137.688C170.489 139.391 168.157 142.574 165.492 147.238C164.382 149.163 163.493 151.236 162.827 153.457C162.161 155.604 161.679 157.64 161.383 159.565C161.161 161.489 161.124 163.192 161.272 164.673C161.42 166.079 161.716 167.005 162.161 167.449C162.975 168.263 163.9 168.67 164.937 168.67C165.973 168.596 167.01 168.3 168.046 167.782C169.157 167.19 170.23 166.45 171.267 165.561C172.377 164.673 173.34 163.747 174.154 162.785C175.042 161.822 175.746 160.934 176.264 160.12C176.856 159.305 177.189 158.713 177.263 158.343Z"
                fill="#4F4F4F"
              />
              <path
                d="M218.018 171.78C218.462 172.076 219.018 172.224 219.684 172.224C220.424 172.224 221.127 172.076 221.794 171.78C222.534 171.484 223.2 171.077 223.793 170.558C224.459 170.04 224.94 169.374 225.236 168.559C225.532 167.745 225.532 166.598 225.236 165.117C224.94 163.562 224.459 161.934 223.793 160.231C223.2 158.454 222.534 156.677 221.794 154.9C221.053 153.124 220.424 151.495 219.906 150.014C219.462 148.904 219.092 147.867 218.795 146.905C218.499 146.091 218.203 145.313 217.907 144.573C217.685 143.759 217.5 143.203 217.352 142.907C216.982 143.499 216.315 144.462 215.353 145.794C214.465 147.127 213.465 148.534 212.355 150.014C211.318 151.421 210.319 152.754 209.356 154.012C208.394 155.197 207.728 156.011 207.357 156.455C206.765 157.121 206.173 157.529 205.581 157.677C205.062 157.751 204.618 157.64 204.248 157.344C203.878 156.973 203.656 156.492 203.582 155.9C203.582 155.234 203.878 154.456 204.47 153.568C204.914 152.976 205.581 152.05 206.469 150.792C207.357 149.459 208.246 148.126 209.134 146.794C210.023 145.387 210.837 144.166 211.577 143.129C212.318 142.019 212.725 141.353 212.799 141.13C212.947 140.538 212.725 139.761 212.132 138.798C211.614 137.836 211.54 136.726 211.91 135.467C212.207 134.431 212.873 133.246 213.909 131.913C214.946 130.507 216.167 129.248 217.574 128.138C218.98 127.027 220.424 126.213 221.905 125.695C223.385 125.102 224.718 125.102 225.903 125.695C226.865 126.287 227.642 126.953 228.235 127.694C228.827 128.36 229.049 129.063 228.901 129.803C228.753 130.174 228.531 130.655 228.235 131.247C227.938 131.839 227.494 132.58 226.902 133.468C226.31 134.282 225.458 135.356 224.348 136.688C224.57 138.391 224.866 139.946 225.236 141.353C225.68 142.759 226.088 143.981 226.458 145.017C226.902 146.276 227.383 147.423 227.901 148.46C228.568 149.792 229.271 151.162 230.011 152.568C230.752 153.975 231.418 155.382 232.01 156.788C232.602 158.121 233.084 159.379 233.454 160.564C233.824 161.748 233.935 162.748 233.787 163.562C233.565 164.821 232.899 166.338 231.788 168.115C230.752 169.892 229.419 171.632 227.79 173.335C226.236 174.963 224.422 176.37 222.349 177.554C220.35 178.739 218.24 179.331 216.019 179.331C214.465 179.331 212.947 178.85 211.466 177.888C210.06 176.925 208.838 175.815 207.802 174.556C206.839 173.223 206.099 171.928 205.581 170.669C205.136 169.411 205.099 168.448 205.47 167.782C205.914 166.894 206.321 166.19 206.691 165.672C207.061 165.154 207.617 164.562 208.357 163.895C208.653 163.673 209.023 163.414 209.467 163.118C209.837 162.896 210.356 162.674 211.022 162.452C211.688 162.23 212.466 161.971 213.354 161.674C214.094 163.969 214.761 165.783 215.353 167.116C215.945 168.374 216.426 169.374 216.797 170.114C217.241 170.928 217.648 171.484 218.018 171.78Z"
                fill="#4F4F4F"
              />
              <path
                d="M283.315 147.46C283.611 147.016 283.981 146.757 284.425 146.683C284.943 146.535 285.351 146.572 285.647 146.794C285.943 147.016 286.091 147.386 286.091 147.904C286.165 148.423 285.98 149.126 285.536 150.014C284.055 152.828 282.093 155.863 279.65 159.12C277.281 162.378 274.764 165.45 272.099 168.337C269.434 171.151 266.842 173.483 264.325 175.333C261.808 177.184 259.698 178.11 257.996 178.11C255.552 178.11 253.517 177.628 251.888 176.666C250.259 175.704 248.964 174.519 248.001 173.112C247.113 171.706 246.484 170.188 246.113 168.559C245.743 166.857 245.632 165.302 245.78 163.895C245.854 162.711 246.113 160.601 246.558 157.566C247.002 154.456 247.594 150.903 248.334 146.905C249.075 142.833 249.889 138.502 250.777 133.912C251.74 129.248 252.739 124.769 253.776 120.475C252.517 120.623 251.259 120.772 250 120.92C248.742 121.068 247.594 121.142 246.558 121.142C244.189 121.142 241.968 120.883 239.895 120.364C237.748 119.772 236.156 119.217 235.12 118.699C234.527 118.403 234.268 117.995 234.342 117.477C234.416 116.885 234.638 116.33 235.008 115.811C235.379 115.219 235.86 114.738 236.452 114.368C236.97 113.924 237.452 113.701 237.896 113.701C239.302 113.85 240.82 113.998 242.449 114.146C244.077 114.22 245.854 114.22 247.779 114.146C249.186 114.072 250.518 113.961 251.777 113.812C253.109 113.664 254.405 113.479 255.664 113.257C256.626 109.704 257.551 106.631 258.44 104.04C259.402 101.375 260.254 99.5242 260.994 98.4878C261.216 98.1176 261.697 97.8215 262.437 97.5994C263.252 97.3033 264.103 97.1182 264.992 97.0442C265.88 96.8961 266.731 96.8961 267.546 97.0442C268.36 97.1182 268.952 97.3773 269.323 97.8215C269.693 98.4138 269.841 99.9314 269.767 102.374C269.693 104.818 269.285 107.927 268.545 111.703C271.655 111.703 274.394 111.888 276.763 112.258C279.206 112.554 281.279 112.924 282.981 113.368C284.684 113.738 286.054 114.146 287.09 114.59C288.127 114.96 288.904 115.219 289.422 115.367C289.941 115.515 290.2 115.885 290.2 116.478C290.274 117.07 290.163 117.699 289.866 118.365C289.644 118.958 289.237 119.476 288.645 119.92C288.053 120.364 287.386 120.512 286.646 120.364C285.906 120.29 285.054 120.142 284.092 119.92C283.204 119.698 282.093 119.513 280.761 119.365C279.502 119.217 277.984 119.069 276.208 118.921C274.431 118.773 272.358 118.699 269.989 118.699C269.545 118.699 269.026 118.736 268.434 118.81C267.916 118.81 267.361 118.81 266.768 118.81C266.472 119.994 266.176 121.179 265.88 122.363C265.658 123.474 265.325 124.658 264.881 125.917C263.918 128.878 262.808 132.098 261.549 135.578C260.439 138.613 259.106 142.093 257.551 146.017C255.997 149.94 254.257 154.123 252.332 158.565C251.888 161.748 251.925 164.192 252.443 165.894C253.035 167.523 253.739 168.707 254.553 169.448C255.515 170.262 256.7 170.706 258.107 170.78C259.217 170.928 260.55 170.558 262.104 169.67C263.733 168.707 265.399 167.449 267.102 165.894C268.804 164.34 270.507 162.637 272.21 160.786C273.987 158.935 275.615 157.121 277.096 155.345C278.577 153.568 279.872 151.976 280.983 150.57C282.093 149.089 282.87 148.052 283.315 147.46Z"
                fill="#4F4F4F"
              />
            </svg>
          </div>
        </div>
      </a>
    </Link>
  );
};

type MoreNavProps = Extract<
  PopoutNavType,
  { __typename: "NavNavItemsNavItemMore" }
>;
const MoreNav = (props: MoreNavProps) => {
  const child = props.featured_post;
  return (
    <div className="hidden bg-gray-50 md:block absolute z-10 inset-x-0 transform shadow-lg">
      <div className="absolute inset-0 flex">
        <div className="bg-white w-1/2" />
      </div>
      <div className="relative max-w-7xl mx-auto grid grid-cols-1 lg:grid-cols-2">
        {child && child.sys && (
          <div className="bg-white px-4 pt-8 sm:pt-12 pb-4 sm:px-6 lg:px-8 ">
            <h3 className="text-sm font-medium tracking-wide text-gray-500 uppercase">
              {/* {props.label} */}
              Featured Article
            </h3>
            <Link href={`/posts/${child.sys.breadcrumbs.join("/")}`}>
              <a className="mt-3 -mx-3 p-3 flex rounded-lg hover:bg-gray-100">
                <div className="hidden sm:block flex-shrink-0">
                  <Img
                    className="w-64 h-64 object-cover rounded-md"
                    src={child.data.image}
                    width={300}
                    quality={90}
                    alt=""
                  />
                </div>
                <div className="w-0 flex-1 sm:ml-8">
                  <h4 className="text-base font-medium text-gray-900 truncate">
                    {child.data.title}
                  </h4>
                  <p className="mt-1 text-sm text-gray-500 line-clamp-6">
                    {child.data.preface}
                  </p>

                  <div className="mt-4 text-sm font-medium">
                    <span className="text-steel-medium hover:text-steel-light">
                      Read <span aria-hidden="true">â†’</span>
                    </span>
                  </div>
                  <div className="mt-6">
                    <Snippet {...child.data.author} />
                  </div>
                </div>
              </a>
            </Link>
          </div>
        )}
        <FromTheBlog {...props} />
      </div>
    </div>
  );
};

const MobileNav = (
  props: {
    auth: typeof auth;
    isOpen: boolean;
    toggleMobileNav: () => void;
  } & Tina.NavFragment["data"]
) => {
  {
    /*
    Mobile menu, show/hide based on mobile menu state.

    Entering: "duration-200 ease-out"
From: "opacity-0 scale-95"
To: "opacity-100 scale-100"
    Leaving: "duration-100 ease-in"
From: "opacity-100 scale-100"
To: "opacity-0 scale-95"
  */
  }
  const openClasses = "opacity-100 scale-100";
  const closedClasses = "opacity-0 scale-95 pointer-events-none";
  const openCloseClasses = props.isOpen ? openClasses : closedClasses;

  const mainItem = props.items.filter(
    (item) => item.__typename === "NavItemPopout_Data"
  )[0] as Tina.NavPopoutFragment;

  return (
    <div
      className={`absolute z-30 top-0 inset-x-0 p-2 transition transform origin-top-right md:hidden ${openCloseClasses}`}
    >
      <div className="rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 bg-white divide-y-2 divide-gray-50">
        <div className="pt-5 pb-6 px-5 sm:pb-8">
          <div className="flex items-center justify-between">
            <div className="h-8 w-auto mb-4">
              <Logo />
            </div>
            <div className="-mr-2">
              <button
                type="button"
                onClick={props.toggleMobileNav}
                className="bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-steel-light"
              >
                <span className="sr-only">Close menu</span>
                {/* Heroicon name: outline/x */}
                <svg
                  className="h-6 w-6"
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                  aria-hidden="true"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={2}
                    d="M6 18L18 6M6 6l12 12"
                  />
                </svg>
              </button>
            </div>
          </div>
          <div className="mt-6 sm:mt-8">
            <nav>
              <div className="grid gap-7 sm:grid-cols-2 sm:gap-y-8 sm:gap-x-4">
                {mainItem?.children?.map((item, index) => (
                  <IconNavItem {...item} index={index} />
                ))}
              </div>
            </nav>
          </div>
        </div>
        <div className="py-6 px-5">
          <div className="grid grid-cols-2 gap-4">
            {mainItem.extra.map((item) => {
              return (
                <Link href={item.value}>
                  <a className="rounded-md text-base font-medium text-gray-900 hover:text-gray-700">
                    {item.label}
                  </a>
                </Link>
              );
            })}
          </div>
        </div>
      </div>
    </div>
  );
};
